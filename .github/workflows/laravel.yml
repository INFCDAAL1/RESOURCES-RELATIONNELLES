name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-24.04

    services:
      mysql:
        image: mariadb:10.6
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: testing
      DB_USERNAME: root
      DB_PASSWORD:
      APP_ENV: testing
      APP_KEY: base64:ctJ9T+sHPspSesV/J894OBCT18tyaRphhfMEZ8NJ6og=
      APP_DEBUG: true
      BCRYPT_ROUNDS: 4
      CACHE_STORE: array
      MAIL_MAILER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      TELESCOPE_ENABLED: false

    steps:
    - uses: actions/checkout@v4

    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: pdo_mysql,mbstring,xml,bcmath

    - name: Copy .env
      run: cp .env.example .env

    - name: Install PHP Dependencies
      run: composer install --no-interaction --prefer-dist

    - name: Generate App Key
      run: php artisan key:generate

    - name: Generate JWT Secret
      run: php artisan jwt:secret

    - name: Wait for DB
      run: |
        echo "Waiting for MariaDB to be ready..."
        for i in {1..30}; do
          nc -z 127.0.0.1 3306 && echo "DB is up!" && break
          echo "Waiting..."
          sleep 2
        done

    - name: Run Migrations and Seed
      run: |
        php artisan migrate --no-interaction --force
        php artisan db:seed --class=TestDatabaseSeeder --no-interaction --force

    - name: Run Tests
      run: php artisan test
  build-docker:
    name: Build Docker Image
    needs: laravel-tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      TAG: ${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}
      REGISTRY: ghcr.io
      IMAGE_NAME: infcdaal1/rr

    concurrency:
      group: build-docker-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          build-args: NODE_ENV=${{ env.NODE_ENV }}
          cache-from: type=gha


      - name: Image pushed successfully
        run: echo "âœ… Image ${{ env.TAG }} pushed to ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
