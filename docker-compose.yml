services:
    traefik:
        image: traefik:v3.4.1
        command:
            - "--providers.docker=true"  # Activer le provider Docker
            - "--entrypoints.web.address=:80"  # Définir le point d'entrée pour le trafic HTTP
            - "--entrypoints.web.http.redirections.entryPoint.to=websecure"  # Rediriger HTTP vers HTTPS
            - "--entrypoints.websecure.address=:443"  # Définir le point d'entrée pour le trafic HTTPS
            - "--entrypoints.websecure.http.tls=true"  # Activer TLS pour le point d'entrée HTTPS
        ports:
            - "80:80"  # Exposer le port 80 pour le trafic HTTP
            - "443:443"  # Exposer le port 443 pour le trafic HTTPS
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        networks:
            - traefik  # Utiliser le réseau Traefik pour la communication entre les services
    front:
        image: ghcr.io/infcdaal1/rr-vue:latest
        #image: rr-vue:dev
        labels:
            - "traefik.enable=true"  # Activer Traefik pour ce service
            - "traefik.http.routers.front.rule=Host(`rr.qalpuch.cc`)"  # Règle de routage pour le service front
            - "traefik.http.routers.front.entrypoints=websecure"  # Utiliser le point d'entrée HTTPS
            - "traefik.http.services.front.loadbalancer.server.port=8080"  # Port du service
        depends_on:
            -   api
        networks:
            - traefik
    api:
        image: ghcr.io/infcdaal1/rr:latest
        labels:
            - "traefik.enable=true"  # Activer Traefik pour ce service
            - "traefik.http.routers.api.rule=PathPrefix(`/api`)"  # Règle de routage pour le service API
            - "traefik.http.routers.front.entrypoints=websecure"  # Utiliser le point d'entrée HTTPS
            - "traefik.http.services.api.loadbalancer.server.port=8090"  # Port du service
        healthcheck:
            test: ["CMD","curl", "-f", "${APP_URL}/up"]
            interval: 30s
            timeout: 10s
            retries: 3
        depends_on:
            - mariadb
        networks:
            - db
            - traefik
    mariadb:
        image: 'mariadb:11'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '0.0.0.0'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'mariadb:/var/lib/mysql'
        networks:
            - db
    watchtower:
        image: containrrr/watchtower:latest
        command: --interval 30 --cleanup  # Vérifier les mises à jour toutes les 30 secondes et nettoyer les images obsolètes
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock  # Accès au socket Docker pour surveiller les conteneurs
        networks:
            - traefik
volumes:
    mariadb:
        driver: local

networks:
    db:
    traefik:
